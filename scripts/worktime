#!/bin/zsh

VIEWER='twui'
VIEWER_QUIT='q'

define_values() {
    echo "$1" > /var/tmp/current_work_time
    echo "$2" > /var/tmp/current_polybar_b_wt_color
    echo "$3" > /var/tmp/current_polybar_f_wt_color

    notify-send -u critical "HorÃ¡rio de Trabalho:" "$1"
}
update_filters() {
    local VIT_CFG_LINE
    local TWUI_CFG_LINE
    local WT

    WT=$1
    VIT_CFG_LINE='report.wlist.filter'
    TWUI_CFG_LINE='uda.taskwarrior-tui.task-report.next.filter'
    
    update() {
        local CFG_LINE
        local WORKTIME_FILTER
        local FINALFILTER
        local REGEX
        local WT

        CFG_LINE=$1
        WT=$2
        
        mount_wt_filter() {
            local WT
            WT=$1
            
            if [[ -n "$2" ]]; then
                echo "(WT:$WT and status:pending and $2)"
            else
                echo "(WT:$WT and status:pending)"
            fi
        }

        if [[ "$WT" =~ Break.* ]] || [[ "$WT" == "PostWork" ]]; then
            FILTER1=$(mount_wt_filter Break1)
            FILTER2=$(mount_wt_filter Break2)
            FILTER3=$(mount_wt_filter PostWork)
            
            if [[ ! "$WT" == "PostWork" ]]; then
                WORKTIME_FILTER="$FILTER1 or $FILTER2"
            else
                WORKTIME_FILTER="$FILTER1 or $FILTER2 or $FILTER3"
            fi
        else
            WORKTIME_FILTER="$(mount_wt_filter $WT "STYLE.not:Dionysian")"
        fi

        FINALFILTER="$TWFILTER or $WORKTIME_FILTER"

        REGEX="s/$CFG_LINE.*/$CFG_LINE=$FINALFILTER/"

        sed -i "$REGEX" ~/.local/share/chezmoi/dot_taskrc

        yes s | chezmoi apply

        update-vit-taskrc
    }

    update $VIT_CFG_LINE $WT
    update $TWUI_CFG_LINE $WT
}
update_vit_session() {
    if tmux has-session -t TaskWarrior 2>/dev/null; then
        tmux send-keys -t TaskWarrior:0.0 "$VIEWER_QUIT" C-m
        sleep 1
        tmux send-keys -t TaskWarrior:0.0 "$VIEWER" C-m
    else
        xdotool mousemove 2400 450
        bspc desktop -f "^5"

        taopen > /dev/null 2& disown %1
    fi
}

case $1 in
    "PreWork")
        define_values "PreWork -> 08:30" "#999999" "#111111"
        ;;
    "Work1")
        define_values "Work1 -> 10:30" "#aa00dd" "#eeeeee"
        "$BSPDIR"/scripts/bspasroot pdfw add rule www.instagram.com
        obs-new_diary
        ;;
    "Break1")
        define_values "Break1 -> 11:00" "#00bbbb" "#111111"
        "$BSPDIR"/scripts/bspasroot pdfw rm rule www.instagram.com
        ;;
    "Work2")
        define_values "Work2 -> 14:00" "#ee0000" "#111111"
        "$BSPDIR"/scripts/bspasroot pdfw add rule www.instagram.com
        obs-new_diary
        ;;
    "Break2")
        define_values "Break2 -> 15:00" "#00eeee" "#111111"
        "$BSPDIR"/scripts/bspasroot pdfw rm rule www.instagram.com
        obs-new_diary
        ;;
    "Work3")
        define_values "Work3 -> 18:00" "#0000ee" "#eeeeee"
        "$BSPDIR"/scripts/bspasroot pdfw add rule www.instagram.com
        ;;
    "PostWork")
        define_values "PostWork -> 21:00" "#999999" "#111111"
        "$BSPDIR"/scripts/bspasroot pdfw rm rule www.instagram.com
        obs-new_diary
        ;;
    *)
        echo "Avaiable timework: PreWork, Work1, Work2, Work3, PostWork"
        exit 1
esac

export WORKTIME=$(sed 's/\s->.*//g' /var/tmp/current_work_time)

update_filters "$WORKTIME"
update_vit_session

polybar-msg cmd "restart"
